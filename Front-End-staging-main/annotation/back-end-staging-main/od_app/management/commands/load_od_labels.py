from django.core.management.base import BaseCommand
from od_app.models import KnownLabel

LABELS = [
    (1, "airplane"),
    (2, "apple"),
    (3, "backpack"),
    (4, "banana"),
    (5, "baseball bat"),
    (6, "baseball glove"),
    (7, "bear"),
    (8, "bed"),
    (9, "bench"),
    (10, "bicycle"),
    (11, "bird"),
    (12, "boat"),
    (13, "book"),
    (14, "bottle"),
    (15, "bowl"),
    (16, "broccoli"),
    (17, "bus"),
    (18, "cake"),
    (19, "car"),
    (20, "carrot"),
    (21, "cat"),
    (22, "cell phone"),
    (23, "chair"),
    (24, "clock"),
    (25, "couch"),
    (26, "cow"),
    (27, "cup"),
    (28, "dining table"),
    (29, "dog"),
    (30, "donut"),
    (31, "elephant"),
    (32, "fire hydrant"),
    (33, "fork"),
    (34, "frisbee"),
    (35, "giraffe"),
    (36, "hair drier"),
    (37, "handbag"),
    (38, "horse"),
    (39, "hot dog"),
    (40, "keyboard"),
    (41, "kite"),
    (42, "knife"),
    (43, "laptop"),
    (44, "microwave"),
    (45, "motorcycle"),
    (46, "mouse"),
    (47, "orange"),
    (48, "oven"),
    (49, "parking meter"),
    (50, "person"),
    (51, "pizza"),
    (52, "potted plant"),
    (53, "refrigerator"),
    (54, "remote"),
    (55, "sandwich"),
    (56, "scissors"),
    (57, "sheep"),
    (58, "sink"),
    (59, "skateboard"),
    (60, "skis"),
    (61, "snowboard"),
    (62, "spoon"),
    (63, "sports ball"),
    (64, "stop sign"),
    (65, "suitcase"),
    (66, "surfboard"),
    (67, "teddy bear"),
    (68, "tennis racket"),
    (69, "tie"),
    (70, "toaster"),
    (71, "toilet"),
    (72, "toothbrush"),
    (73, "traffic light"),
    (74, "train"),
    (75, "truck"),
    (76, "tv"),
    (77, "umbrella"),
    (78, "vase"),
    (79, "wine glass"),
    (80, "zebra"),
    (81, "smoke"),
    (82, "fire"),
    (83, "handgun"),
    (84, "rifle"),
]

class Command(BaseCommand):
    help = "Load known labels with fixed IDs"

    def handle(self, *args, **kwargs):
        for id, name in LABELS:
            obj, created = KnownLabel.objects.update_or_create(
                id=id,
                defaults={"label_name": name}
            )
            if created:
                self.stdout.write(self.style.SUCCESS(f"Created: {id} - {name}"))
            else:
                self.stdout.write(self.style.WARNING(f"Updated: {id} - {name}"))
        self.stdout.write(self.style.SUCCESS("All labels loaded."))